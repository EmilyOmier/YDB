#################################################################
#								#
# Copyright (c) 2018-2022 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_BUILDKIT: 1

stages:
 - build
 - docker-create

commit-verify:
  image: ubuntu:22.04
  stage: build
  interruptible: true
  before_script:
    - apt-get update -qq && apt-get install -y -qq git wget gnupg
  script:
    - ci/commit_verify.sh ci/needs_copyright.sh https://gitlab.com/YottaDB/DB/YDB

test-clang-tidy:
  image: ubuntu:22.04
  # NOTE: conceptually this is a test and not a build.
  # However, if we make it part of the `test` stage, it will only
  # run after all other builds succeed.  Since it already takes a half-hour to
  # execute, run it in parallel with all other build jobs instead.
  stage: build
  interruptible: true
  artifacts:
    paths:
      - build/warnings/
      - ci/
    when: always
    expire_in: 1 month
  script:
    - apt-get update -q
    - apt-get -q install -y --no-install-recommends >/dev/null
        ca-certificates
        clang-14
        clang-tidy-14
        file
        cmake
        make
        git
        tcsh
        libconfig-dev
        libelf-dev
        libgcrypt-dev
        libgpg-error-dev
        libgpgme11-dev
        libicu-dev
        libncurses-dev
        libssl-dev
        moreutils
        shellcheck
        zlib1g-dev
    - ci/build.sh

# Main and ONLY docker creation mechanism.
.docker-create:
  stage: docker-create
  script:
    - docker build --platform=${PLATFORM} ${ARGS} --pull -t yottadb/${REPO}:${DOCKERHUBTAG} -f ${DOCKERFILE} .
    - docker login -u $HUB_USERNAME -p $HUB_PASSWORD
    - docker push yottadb/${REPO}:${DOCKERHUBTAG}
    - docker tag yottadb/${REPO}:${DOCKERHUBTAG} yottadb/${REPO}:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
    - docker push yottadb/${REPO}:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
    - 'echo -e "FROM yottadb/${REPO}:${DOCKERHUBTAG}\n ENTRYPOINT []" > BareDockerfile'
    - docker build --platform=${PLATFORM} --pull -t yottadb/${REPO}-base:${DOCKERHUBTAG} -f BareDockerfile .
    - docker push yottadb/${REPO}-base:${DOCKERHUBTAG}
    - docker tag yottadb/${REPO}-base:${DOCKERHUBTAG} yottadb/${REPO}-base:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
    - docker push yottadb/${REPO}-base:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
  only:
    - master@YottaDB/DB/YDB

# Section for creating single commit docker images (:latest-master tags)
# amd64
.docker-create-amd64:
  extends: .docker-create
  variables:
    PLATFORM: linux/amd64
    DOCKERHUBTAG: latest-master
  tags:
    - amd64
# aarch64
.docker-create-aarch64:
  extends: .docker-create
  variables:
    PLATFORM: linux/aarch64
    DOCKERHUBTAG: latest-master
  tags:
    - aarch64
# END

# Section for creating tagged Dockerfiles (:latest tags)
# amd64
.docker-create-amd64-release:
  extends: .docker-create
  variables:
    PLATFORM: linux/amd64
    DOCKERHUBTAG: latest
  tags:
    - amd64
  only:
    - tags
# aarch64
.docker-create-aarch64-release:
  extends: .docker-create
  variables:
    PLATFORM: linux/aarch64
    DOCKERHUBTAG: latest
  tags:
    - aarch64
  only:
    - tags
# END

# Single commit docker images for amd64 (:latest-master)
docker-create-ubuntu-amd64:
  extends: .docker-create-amd64
  variables:
    DOCKERFILE: Dockerfile
    REPO: yottadb

docker-create-ubuntu-debug-amd64:
  extends: .docker-create-amd64
  variables:
    DOCKERFILE: Dockerfile
    REPO: yottadb-debug
    ARGS: --build-arg CMAKE_BUILD_TYPE=Debug

docker-create-rocky-amd64:
  extends: .docker-create-amd64
  variables:
    DOCKERFILE: Dockerfile-rocky
    REPO: yottadb-rocky

docker-create-debian-amd64:
  extends: .docker-create-amd64
  variables:
    DOCKERFILE: Dockerfile-debian
    REPO: yottadb-debian
# END

# Tag commit docker images for amd64 (:latest)
docker-create-release-ubuntu-amd64:
  extends: .docker-create-amd64-release
  variables:
    DOCKERFILE: Dockerfile
    REPO: yottadb

docker-create-release-ubuntu-debug-amd64:
  extends: .docker-create-amd64-release
  variables:
    DOCKERFILE: Dockerfile
    REPO: yottadb-debug
    ARGS: --build-arg CMAKE_BUILD_TYPE=Debug

docker-create-release-rocky-amd64:
  extends: .docker-create-amd64-release
  variables:
    DOCKERFILE: Dockerfile-rocky
    REPO: yottadb-rocky

docker-create-release-debian-amd64:
  extends: .docker-create-amd64-release
  variables:
    DOCKERFILE: Dockerfile-debian
    REPO: yottadb-debian
# END

# TODO #931: Single commit docker images for aarch64
# TODO #931: Tag commit docker images for aarch64
# END
